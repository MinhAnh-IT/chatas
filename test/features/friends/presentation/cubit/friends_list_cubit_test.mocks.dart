// Mocks generated by Mockito 5.4.6 from annotations
// in chatas/test/features/friends/presentation/cubit/friends_list_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:chatas/features/friends/domain/entities/friend.dart' as _i4;
import 'package:chatas/features/friends/domain/entities/friendRequest.dart'
    as _i5;
import 'package:chatas/features/friends/domain/repositories/friend_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FriendRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFriendRepository extends _i1.Mock implements _i2.FriendRepository {
  MockFriendRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Friend>> getFriends(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getFriends, [userId]),
            returnValue: _i3.Future<List<_i4.Friend>>.value(<_i4.Friend>[]),
          )
          as _i3.Future<List<_i4.Friend>>);

  @override
  _i3.Future<void> addFriend(String? userId, String? friendUserId) =>
      (super.noSuchMethod(
            Invocation.method(#addFriend, [userId, friendUserId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> removeFriend(String? userId, String? friendUserId) =>
      (super.noSuchMethod(
            Invocation.method(#removeFriend, [userId, friendUserId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateFriendStatus(String? friendId, String? status) =>
      (super.noSuchMethod(
            Invocation.method(#updateFriendStatus, [friendId, status]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateFriendOnlineStatus(String? userId, bool? isOnline) =>
      (super.noSuchMethod(
            Invocation.method(#updateFriendOnlineStatus, [userId, isOnline]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateLastMessage(
    String? friendId,
    String? messageId,
    DateTime? timestamp,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateLastMessage, [
              friendId,
              messageId,
              timestamp,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateBlockStatus(
    String? userId,
    String? friendId,
    bool? isBlock,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateBlockStatus, [userId, friendId, isBlock]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> sendFriendRequest(_i5.FriendRequest? friendRequest) =>
      (super.noSuchMethod(
            Invocation.method(#sendFriendRequest, [friendRequest]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> acceptFriendRequest(
    String? requestId,
    String? senderId,
    String? receiverId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#acceptFriendRequest, [
              requestId,
              senderId,
              receiverId,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> rejectFriendRequest(String? requestId) =>
      (super.noSuchMethod(
            Invocation.method(#rejectFriendRequest, [requestId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancelFriendRequest(String? senderId, String? receiverId) =>
      (super.noSuchMethod(
            Invocation.method(#cancelFriendRequest, [senderId, receiverId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.FriendRequest>> getReceivedFriendRequests(
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getReceivedFriendRequests, [userId]),
            returnValue: _i3.Future<List<_i5.FriendRequest>>.value(
              <_i5.FriendRequest>[],
            ),
          )
          as _i3.Future<List<_i5.FriendRequest>>);

  @override
  _i3.Future<List<_i5.FriendRequest>> getSentFriendRequests(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getSentFriendRequests, [userId]),
            returnValue: _i3.Future<List<_i5.FriendRequest>>.value(
              <_i5.FriendRequest>[],
            ),
          )
          as _i3.Future<List<_i5.FriendRequest>>);

  @override
  _i3.Future<String?> getFriendshipStatus(
    String? userId,
    String? otherUserId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getFriendshipStatus, [userId, otherUserId]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<List<Map<String, dynamic>>> searchUsers(
    String? query,
    String? currentUserId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchUsers, [query, currentUserId]),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);
}
