// Mocks generated by Mockito 5.4.6 from annotations
// in chatas/test/features/chat_message/data/repositories/chat_message_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:chatas/features/chat_message/data/datasources/chat_message_remote_data_source.dart'
    as _i3;
import 'package:chatas/features/chat_message/data/models/chat_message_model.dart'
    as _i5;
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ChatMessageRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatMessageRemoteDataSource extends _i1.Mock
    implements _i3.ChatMessageRemoteDataSource {
  MockChatMessageRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get firestore =>
      (super.noSuchMethod(
            Invocation.getter(#firestore),
            returnValue: _FakeFirebaseFirestore_0(
              this,
              Invocation.getter(#firestore),
            ),
          )
          as _i2.FirebaseFirestore);

  @override
  _i4.Future<List<_i5.ChatMessageModel>> fetchMessages(
    String? chatThreadId,
    String? currentUserId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchMessages, [chatThreadId, currentUserId]),
            returnValue: _i4.Future<List<_i5.ChatMessageModel>>.value(
              <_i5.ChatMessageModel>[],
            ),
          )
          as _i4.Future<List<_i5.ChatMessageModel>>);

  @override
  _i4.Future<List<_i5.ChatMessageModel>> fetchAllMessages(
    String? chatThreadId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllMessages, [chatThreadId]),
            returnValue: _i4.Future<List<_i5.ChatMessageModel>>.value(
              <_i5.ChatMessageModel>[],
            ),
          )
          as _i4.Future<List<_i5.ChatMessageModel>>);

  @override
  _i4.Stream<List<_i5.ChatMessageModel>> messagesStream(
    String? chatThreadId,
    String? currentUserId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#messagesStream, [chatThreadId, currentUserId]),
            returnValue: _i4.Stream<List<_i5.ChatMessageModel>>.empty(),
          )
          as _i4.Stream<List<_i5.ChatMessageModel>>);

  @override
  _i4.Future<void> addMessage(_i5.ChatMessageModel? model) =>
      (super.noSuchMethod(
            Invocation.method(#addMessage, [model]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateMessage(
    String? messageId,
    _i5.ChatMessageModel? model,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateMessage, [messageId, model]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteMessage(String? messageId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMessage, [messageId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> addReaction(
    String? messageId,
    String? userId,
    String? reaction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addReaction, [messageId, userId, reaction]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> removeReaction(String? messageId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#removeReaction, [messageId, userId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateMessageStatus(String? messageId, String? status) =>
      (super.noSuchMethod(
            Invocation.method(#updateMessageStatus, [messageId, status]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> markMessagesAsRead(String? chatThreadId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#markMessagesAsRead, [chatThreadId, userId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> editMessage({
    required String? messageId,
    required String? newContent,
    required String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#editMessage, [], {
              #messageId: messageId,
              #newContent: newContent,
              #userId: userId,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteMessageWithValidation({
    required String? messageId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMessageWithValidation, [], {
              #messageId: messageId,
              #userId: userId,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.ChatMessageModel>> fetchMessagesWithPagination(
    String? chatThreadId, {
    _i2.DocumentSnapshot<Object?>? lastDocument,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #fetchMessagesWithPagination,
              [chatThreadId],
              {#lastDocument: lastDocument, #limit: limit},
            ),
            returnValue: _i4.Future<List<_i5.ChatMessageModel>>.value(
              <_i5.ChatMessageModel>[],
            ),
          )
          as _i4.Future<List<_i5.ChatMessageModel>>);
}
