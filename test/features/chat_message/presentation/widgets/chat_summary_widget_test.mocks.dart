// Mocks generated by Mockito 5.4.6 from annotations
// in chatas/test/features/chat_message/presentation/widgets/chat_summary_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:chatas/features/chat_message/domain/entities/chat_message.dart'
    as _i4;
import 'package:chatas/features/chat_message/presentation/cubit/chat_message_cubit.dart'
    as _i3;
import 'package:chatas/features/chat_message/presentation/cubit/chat_message_state.dart'
    as _i2;
import 'package:chatas/features/chat_thread/domain/entities/chat_thread.dart'
    as _i6;
import 'package:flutter_bloc/flutter_bloc.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChatMessageState_0 extends _i1.SmartFake
    implements _i2.ChatMessageState {
  _FakeChatMessageState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ChatMessageCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatMessageCubit extends _i1.Mock implements _i3.ChatMessageCubit {
  MockChatMessageCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.ChatMessage> get currentMessages =>
      (super.noSuchMethod(
            Invocation.getter(#currentMessages),
            returnValue: <_i4.ChatMessage>[],
          )
          as List<_i4.ChatMessage>);

  @override
  _i2.ChatMessageState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeChatMessageState_0(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i2.ChatMessageState);

  @override
  _i5.Stream<_i2.ChatMessageState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i5.Stream<_i2.ChatMessageState>.empty(),
          )
          as _i5.Stream<_i2.ChatMessageState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  void emit(_i2.ChatMessageState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> summarizeOfflineMessages({
    required List<_i4.ChatMessage>? allMessages,
    required DateTime? lastActive,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#summarizeOfflineMessages, [], {
              #allMessages: allMessages,
              #lastActive: lastActive,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> manualSummarizeAllMessages({
    required List<_i4.ChatMessage>? allMessages,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#manualSummarizeAllMessages, [], {
              #allMessages: allMessages,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void clearSummary() => super.noSuchMethod(
    Invocation.method(#clearSummary, []),
    returnValueForMissingStub: null,
  );

  @override
  void resetOfflineSummaryCheck() => super.noSuchMethod(
    Invocation.method(#resetOfflineSummaryCheck, []),
    returnValueForMissingStub: null,
  );

  @override
  void setCurrentUser({
    required String? userId,
    required String? userName,
    String? userAvatarUrl,
  }) => super.noSuchMethod(
    Invocation.method(#setCurrentUser, [], {
      #userId: userId,
      #userName: userName,
      #userAvatarUrl: userAvatarUrl,
    }),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> initializeCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#initializeCurrentUser, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadMessages(String? chatThreadId) =>
      (super.noSuchMethod(
            Invocation.method(#loadMessages, [chatThreadId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadTemporaryThread(_i6.ChatThread? temporaryThread) =>
      (super.noSuchMethod(
            Invocation.method(#loadTemporaryThread, [temporaryThread]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> sendMessage(String? content) =>
      (super.noSuchMethod(
            Invocation.method(#sendMessage, [content]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> sendFileMessage(_i4.ChatMessage? fileMessage) =>
      (super.noSuchMethod(
            Invocation.method(#sendFileMessage, [fileMessage]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void toggleMessageSelection(String? messageId) => super.noSuchMethod(
    Invocation.method(#toggleMessageSelection, [messageId]),
    returnValueForMissingStub: null,
  );

  @override
  void clearMessageSelection() => super.noSuchMethod(
    Invocation.method(#clearMessageSelection, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> addReaction(String? messageId, _i4.ReactionType? reaction) =>
      (super.noSuchMethod(
            Invocation.method(#addReaction, [messageId, reaction]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeReaction(String? messageId) =>
      (super.noSuchMethod(
            Invocation.method(#removeReaction, [messageId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> editMessage(String? messageId, String? newContent) =>
      (super.noSuchMethod(
            Invocation.method(#editMessage, [messageId, newContent]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteMessage(String? messageId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMessage, [messageId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> refreshMessages() =>
      (super.noSuchMethod(
            Invocation.method(#refreshMessages, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  bool isMessageSelected(String? messageId) =>
      (super.noSuchMethod(
            Invocation.method(#isMessageSelected, [messageId]),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<void> markMessagesAsRead() =>
      (super.noSuchMethod(
            Invocation.method(#markMessagesAsRead, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void setReplyToMessage(String? messageId) => super.noSuchMethod(
    Invocation.method(#setReplyToMessage, [messageId]),
    returnValueForMissingStub: null,
  );

  @override
  void clearReply() => super.noSuchMethod(
    Invocation.method(#clearReply, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void onChange(_i7.Change<_i2.ChatMessageState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );
}
